% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{PCR_est}
\alias{PCR_est}
\title{Parameter estimation for positive-definite covariance regression model (PCR)}
\usage{
PCR_est(
  Theta_0,
  B_0,
  Lambda_0,
  mu,
  lambda,
  epsilon,
  Z,
  Y,
  iter_col,
  error_col,
  combn_mat
)
}
\arguments{
\item{Theta_0}{p x p x q array.}

\item{B_0}{p x p x K coefficients array.}

\item{Lambda_0}{p x p x q array for Lagrange multipliers.}

\item{mu}{K x 1 vector.}

\item{lambda}{p x p x q thresholding array.}

\item{epsilon}{positive number for positive-definite projection.}

\item{Z}{n x q covariate matrix.}

\item{Y}{p x p x n array, each element represent the sample covariance matrix of an individual.}

\item{iter_col}{an integer represents the maximize iteration time for convergence.}

\item{error_col}{a positive number refers to the tolerence value for algorithm convergence.}

\item{combn_mat}{a \eqn{2^q-1} x (q-1) matrix with each row be the coefficients of \eqn{B_1},...,\eqn{B_q} in constraints.}
}
\value{
a list of six variables
\describe{
\item{B_update}{a p x p x K array refers to the estimation of coefficient matrices B}
\item{Theta_update}{a p x p x K array represents the estimation of Theta}
\item{Lambda_update}{a p x p x K array represents the estimation of Lambda}
\item{iter_num}{a integer represents the iteration time}
\item{convergence}{convergence indicator, the value is 1 if the algorithm convergences, or the value is 0}
\item{error}{the absolute value for the difference between the value of objective function at two iterations}
}
}
\description{
Parameter estimation for positive-definite covariance regression model (PCR)
}
\examples{
data(example_data)
Y = example_data$Cov
Z = example_data$cov_all
B_0 = example_data$B_0
Lambda_0 = example_data$Lambda_0
Theta_0 = example_data$Theta_0
mu = example_data$mu
combn_mat = example_data$combn_mat
lambda_mat = example_data$lambda_mat
lambda_0 = c(0.01,0.006,0.01,0.004)
lambda_final = lambda_mat
for(i in 1:dim(lambda_mat)[3]){
 lambda_final[ , ,i] = lambda_0[i]*lambda_mat[ , ,i]
}
results = PCR_est(Theta_0,B_0, Lambda_0, mu, lambda_final, 1e-3, Z, Y, 1000, 1e-5, combn_mat)
B_est = results$B_update
}
